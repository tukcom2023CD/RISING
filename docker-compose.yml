version: "3"
services:
  db:
    container_name: mysql
    image: mysql:8.0
#    volumes:
#      - ./volume/mysql/data:/var/lib/mysql
    networks:
      - app-tier
    environment: # 컨테이너 안의 환경변수 설정
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_USER_PASSWORD}
      - TZ=Asia/Seoul

    ports:
      - "3307:3306"
    tty: true
    
  backend:
    container_name: backend_con
    image: ${JIB_IMAGE}
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-tier
    tty: true #명령어 실행 끝나도 꺼지지 않음

  rabbitmq:
    image: rabbitmq:3.7.14-management-alpine # 웹 UI management 툴 포함
    command: rabbitmq-server
    expose:
      - "5672" #rabbitmq
      - "15672" #rabbitmq GUI
#    healthcheck:
#      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
#      interval: 10s
#      timeout: 10s
#      retries: 5
    environment:
#      RABBITMQ_ERLANG_COOKIE: "RabbitMQ-My-Cookies"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - app-tier

#  frontend:
#    container_name: frontend_con
#    build: ./frontend
#    command: ["npm", "start"]
#    ports:
#      - "3000:3000"

#  nginx:
#    container_name: nginx_con
#    image: nginx:latest
#    build:
#      dockerfile: dockerfile
#      context: ./nginx
#    ports:
#      - "80:80"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#    depends_on:
#      - backend
#      - frontend

#
networks:
  app-tier:
    external: true
